{"version":3,"sources":["InfiniteCarousel/common/helpers.js","InfiniteCarousel/components/InfiniteCarouselArrow.js","InfiniteCarousel/components/InfiniteCarouselDots.js","InfiniteCarousel/index.js","App.js","serviceWorker.js","index.js"],"names":["isTouchDevice","document","documentElement","sortNumber","a","b","InfiniteCarouselArrow","typeClassName","carouselName","next","onClick","iconTypeClassName","className","classNameIcon","buttonName","name","data-testid","type","defaultProps","InfiniteCarouselDots","dotName","numberOfDots","activePage","dots","i","push","data-index","key","InfiniteCarousel","props","setupBreakpointSettings","propChildren","children","propScrollOnDevice","scrollOnDevice","breakpointsSettings","breakpoints","stateScrollOnDeviceProps","state","scrollOnDeviceProps","map","element","breakpoint","settings","forEach","length","sort","index","lowerBreakpoint","higherBreakpoint","query","minWidth","maxWidth","media","newSettings","getChildrenList","slidesToShow","slideUniqueIds","child","uniqid","setState","setDimensions","reverse","undefined","getSideSize","currentScreenWidth","incrementalSides","sideSize","elem","lazyLoadedList","visibleSlideList","currentIndex","window","innerWidth","clientWidth","body","childrenCount","Children","count","slidesCount","slidesWidth","frame","getBoundingClientRect","width","offsetWidth","showSides","slidesSpacing","childrenLength","Math","ceil","countPages","slidePages","singlePage","_child","concat","getLazyLoadedIndexes","getVisibleIndexes","start","limit","visibleIndexes","showSidesSlide","newLazyLoadedList","indexOf","isAtLastPage","notLazyLoaded","Array","isArray","slice","getTargetIndex","slidesToScroll","childrenReminder","onDotClick","event","preventDefault","animating","autoCycleTimer","autoCycle","clearInterval","targetIndex","target","parentElement","getAttribute","handleTrack","playAutoCycle","onWindowResized","onMouseEnter","pauseOnHover","pauseAutoCycle","onMouseOver","onMouseLeave","onSwipeStart","e","swipe","draggable","startX","touches","pageX","clientX","startY","pageY","clientY","dragging","touchObject","onSwipeMove","curX","curY","direction","x1","x2","y1","y2","xDist","yDist","swipeAngle","round","atan2","PI","abs","getSwipeDirection","swipeLength","sqrt","endX","endY","onSwipeEnd","nextCurrentIndex","setTimeout","animationDuration","getTrackStyles","trackWidth","totalSlideWidth","initialTrackPostion","transition","trackPosition","sideWidth","position","display","height","padding","transform","boxSizing","MozBoxSizing","marginLeft","getScrollTrackStyles","clear","getSlideStyles","isVisible","float","opacity","sidesOpacity","Number","isNaN","margin","getFormatedChildren","lazyLoad","style","alt","src","placeholderImageSrc","setInterval","cycleInterval","onSlideChange","callback","moveToNext","onNextClick","moveToPrevious","onPreviousClick","getSettingsForScrollOnDevice","init","responsive","newChildren","storeFrameRef","f","arrows","this","addEventListener","attachEvent","removeEventListener","detachEvent","prevArrow","nextArrow","pagingSeparator","hasScrollOnDevice","prevArrowProps","React","cloneElement","nextArrowProps","paging","trackStyles","trackClassName","formattedChildren","disableSwipeEvents","id","onFocus","ref","onMouseDown","onMouseMove","onMouseUp","onTouchCancel","onTouchEnd","onTouchMove","onTouchStart","Component","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.4ddbec50.chunk.js","sourcesContent":["export function getElementWidth(elem) {\n  return elem.getBoundingClientRect().width || elem.offsetWidth || 0;\n}\n\nexport function getElementHeight(elem) {\n  return elem.getBoundingClientRect().height || elem.offsetHeight || 0;\n}\n\nexport function getSwipeDirection(x1, x2, y1, y2) {\n  const xDist = x1 - x2;\n  const yDist = y1 - y2;\n\n  let swipeAngle = Math.round((Math.atan2(yDist, xDist) * 180) / Math.PI);\n\n  if (swipeAngle < 0) {\n    swipeAngle = 360 - Math.abs(swipeAngle);\n  }\n  if (swipeAngle <= 45 && swipeAngle >= 0) {\n    return 1;\n  }\n  if (swipeAngle <= 360 && swipeAngle >= 315) {\n    return 1;\n  }\n  if (swipeAngle >= 135 && swipeAngle <= 225) {\n    return -1;\n  }\n  return 0;\n}\n\nexport function isTouchDevice() {\n  return 'ontouchstart' in document.documentElement;\n}\n\nexport function sortNumber(a, b) {\n  return a - b;\n}\n\nexport function getScreenWidth() {\n  return window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './InfiniteCarousel.css';\n\nfunction InfiniteCarouselArrow({ carouselName, next, onClick }) {\n  const arrowClassName = 'InfiniteCarouselArrow';\n  let typeClassName;\n  if (next) {\n    typeClassName = 'InfiniteCarouselArrowNext';\n  } else {\n    typeClassName = 'InfiniteCarouselArrowPrev';\n  }\n\n  const iconClassName = 'InfiniteCarouselArrowIcon';\n  let iconTypeClassName;\n  if (next) {\n    iconTypeClassName = 'InfiniteCarouselArrowNextIcon';\n  } else {\n    iconTypeClassName = 'InfiniteCarouselArrowPrevIcon';\n  }\n\n  const className = `${arrowClassName} ${typeClassName}`;\n  const classNameIcon = `${iconClassName} ${iconTypeClassName}`;\n  const buttonName = `${carouselName}-button-${next ? 'next' : 'previous'}`;\n\n  return (\n    <button\n      name={buttonName}\n      data-testid={buttonName}\n      className={className}\n      onClick={onClick}\n      type=\"button\"\n    >\n      <i className={classNameIcon} />\n    </button>\n  );\n}\n\nInfiniteCarouselArrow.propTypes = {\n  carouselName: PropTypes.string.isRequired,\n  next: PropTypes.bool,\n  onClick: PropTypes.func.isRequired,\n};\n\nInfiniteCarouselArrow.defaultProps = {\n  next: true,\n};\n\nexport default InfiniteCarouselArrow;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './InfiniteCarousel.css';\n\nfunction InfiniteCarouselDots({ carouselName, numberOfDots, activePage, onClick }) {\n  const dots = [];\n  let classNameIcon;\n  let dotName;\n\n  for (let i = 0; i < numberOfDots; i += 1) {\n    classNameIcon = `InfiniteCarouselDotIcon ${\n      i === activePage ? 'InfiniteCarouselDotActiveIcon' : ''\n    }`;\n    dotName = `${carouselName}-dots-${i}`;\n    dots.push(\n      <button\n        name={dotName}\n        data-testid={dotName}\n        className=\"InfiniteCarouselDot\"\n        data-index={i}\n        key={i + 1}\n        onClick={onClick}\n        type=\"button\"\n      >\n        <i className={classNameIcon} />\n      </button>\n    ); // eslint-disable-line react/jsx-closing-tag-location\n  }\n\n  return (\n    <ul data-testid={`${carouselName}-dots`} className=\"InfiniteCarouselDots\">\n      {dots}\n    </ul>\n  );\n}\n\nInfiniteCarouselDots.propTypes = {\n  carouselName: PropTypes.string.isRequired,\n  numberOfDots: PropTypes.number.isRequired,\n  activePage: PropTypes.number.isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default InfiniteCarouselDots;\n","import React, { Component, Children } from 'react';\nimport PropTypes from 'prop-types';\nimport { media } from 'react-responsive-mixin';\nimport uniqid from 'uniqid';\nimport {\n  getElementWidth,\n  getSwipeDirection,\n  isTouchDevice,\n  sortNumber,\n  getScreenWidth,\n} from './common/helpers';\nimport InfiniteCarouselArrow from './components/InfiniteCarouselArrow';\nimport InfiniteCarouselDots from './components/InfiniteCarouselDots';\nimport './components/InfiniteCarousel.css';\n\nclass InfiniteCarousel extends Component {\n  constructor(props) {\n    super(props);\n\n    // initial state\n    this.state = {\n      currentIndex: 0,\n      activePage: 0,\n      children: [],\n      lazyLoadedList: [],\n      visibleSlideList: [],\n      childrenCount: 0,\n      slidesCount: 0,\n      slidesWidth: 1,\n      slidePages: 1,\n      singlePage: true,\n      settings: {},\n      autoCycleTimer: null,\n      dragging: false,\n      touchObject: {\n        startX: 0,\n        startY: 0,\n        endX: 0,\n        endY: 0,\n        length: 0,\n        direction: -1,\n      },\n      scrollOnDeviceProps: {\n        arrows: false,\n        dots: false,\n        lazyLoad: false,\n        autoCycle: false,\n      },\n      lowerBreakpoint: undefined,\n      higherBreakpoint: undefined,\n      slideUniqueIds: [],\n    };\n  }\n\n  componentDidMount() {\n    this.init();\n\n    if (!window) {\n      return;\n    }\n\n    if (window.addEventListener) {\n      window.addEventListener('resize', this.onWindowResized);\n    } else {\n      window.attachEvent('onresize', this.onWindowResized);\n    }\n  }\n\n  componentWillUnmount() {\n    if (window.addEventListener) {\n      window.removeEventListener('resize', this.onWindowResized);\n    } else {\n      window.detachEvent('onresize', this.onWindowResized);\n    }\n    const { autoCycleTimer } = this.state;\n    if (autoCycleTimer) {\n      clearInterval(autoCycleTimer);\n    }\n  }\n\n  setupBreakpointSettings = () => {\n    const {\n      children: propChildren,\n      scrollOnDevice: propScrollOnDevice,\n      breakpoints: breakpointsSettings,\n    } = this.props;\n    const { scrollOnDeviceProps: stateScrollOnDeviceProps } = this.state;\n    const breakpoints = breakpointsSettings.map(\n      (element) => element.breakpoint\n    );\n    const settings = {};\n    breakpointsSettings.forEach((element) => {\n      settings[element.breakpoint] = element.settings;\n    });\n    if (breakpoints.length > 0) {\n      breakpoints.sort(sortNumber);\n      // Register responsive media queries in settings\n      breakpoints.forEach((element, index) => {\n        let lowerBreakpoint;\n        let higherBreakpoint;\n        if (index === 0) {\n          lowerBreakpoint = 0;\n          higherBreakpoint = element - 1;\n        } else {\n          lowerBreakpoint = breakpoints[index - 1];\n          higherBreakpoint = element - 1;\n        }\n\n        // assign breakpoints properties\n        const query = { minWidth: lowerBreakpoint, maxWidth: higherBreakpoint };\n\n        media(query, () => {\n          const scrollOnDevice = propScrollOnDevice && isTouchDevice();\n          const scrollOnDeviceProps = scrollOnDevice\n            ? stateScrollOnDeviceProps\n            : {};\n          const newSettings = {\n            ...this.defaultProps,\n            ...this.props,\n            ...settings[element],\n            ...scrollOnDeviceProps,\n          };\n          const children = this.getChildrenList(\n            propChildren,\n            newSettings.slidesToShow\n          );\n          const slideUniqueIds = children.map((child) => uniqid('slide-')); // eslint-disable-line  no-unused-vars\n          this.setState(\n            {\n              settings: newSettings,\n              children,\n              slideUniqueIds,\n              lowerBreakpoint,\n              higherBreakpoint,\n            },\n            this.setDimensions\n          );\n        });\n      });\n\n      // Resize from small to large\n      breakpoints.reverse();\n      const query = { minWidth: breakpoints[0] };\n      media(query, () => {\n        const scrollOnDevice = propScrollOnDevice && isTouchDevice();\n        const scrollOnDeviceProps = scrollOnDevice\n          ? stateScrollOnDeviceProps\n          : {};\n        const newSettings = {\n          ...this.defaultProps,\n          ...this.props,\n          ...scrollOnDeviceProps,\n        };\n        const children = this.getChildrenList(\n          propChildren,\n          newSettings.slidesToShow\n        );\n        const slideUniqueIds = children.map((child) => uniqid('slide-')); // eslint-disable-line  no-unused-vars\n        this.setState(\n          {\n            settings: newSettings,\n            children,\n            slideUniqueIds,\n            lowerBreakpoint: undefined,\n            higherBreakpoint: undefined,\n          },\n          this.setDimensions\n        );\n      });\n    }\n  };\n\n  getSideSize = (lowerBreakpoint, higherBreakpoint, currentScreenWidth) => {\n    const {\n      settings: { incrementalSides, sideSize },\n    } = this.state;\n\n    if (\n      lowerBreakpoint !== undefined &&\n      higherBreakpoint !== undefined &&\n      incrementalSides\n    ) {\n      const maxPoint = higherBreakpoint - lowerBreakpoint;\n      const currentPoint = currentScreenWidth - lowerBreakpoint;\n      const sideSizePercetange = (currentPoint * 50) / maxPoint;\n\n      return sideSizePercetange / 100;\n    }\n\n    return sideSize;\n  };\n\n  setDimensions = () => {\n    const {\n      settings,\n      lowerBreakpoint,\n      higherBreakpoint,\n      children,\n      currentIndex,\n    } = this.state;\n    const {\n      children: propChildren,\n      scrollOnDevice: propScrollOnDevice,\n    } = this.props;\n    const scrollOnDevice = propScrollOnDevice && isTouchDevice();\n    const currentScreenWidth = getScreenWidth();\n    const sideSize = this.getSideSize(\n      lowerBreakpoint,\n      higherBreakpoint,\n      currentScreenWidth\n    );\n    const childrenCount = Children.count(propChildren);\n    const slidesCount = scrollOnDevice\n      ? childrenCount\n      : Children.count(children);\n    const frameWidth = getElementWidth(this.frame);\n    const { showSides } = this.props;\n    const slidesToShow = showSides\n      ? settings.slidesToShow + sideSize * 2\n      : settings.slidesToShow;\n    const slidesWidth = frameWidth / slidesToShow - settings.slidesSpacing * 2;\n    const childrenLength = propChildren.length;\n    const activePage = Math.ceil(currentIndex / settings.slidesToShow);\n    const countPages = Math.ceil(childrenLength / settings.slidesToShow);\n    const slidePages = childrenLength > settings.slidesToShow ? countPages : 1;\n    const singlePage = slidePages <= 1;\n\n    let lazyLoadedList;\n    let visibleSlideList;\n    if (singlePage || scrollOnDevice) {\n      // jshint unused:true\n      lazyLoadedList = children.map((_child, index) => index); // eslint-disable-line no-unused-vars\n      visibleSlideList = [].concat(lazyLoadedList);\n    } else {\n      lazyLoadedList = this.getLazyLoadedIndexes(propChildren, currentIndex);\n      visibleSlideList = this.getVisibleIndexes(propChildren, currentIndex);\n    }\n\n    this.setState({\n      activePage,\n      childrenCount,\n      slidesCount,\n      slidesWidth,\n      slidePages,\n      singlePage,\n      lazyLoadedList,\n      visibleSlideList,\n      sideSize,\n    });\n  };\n\n  getVisibleIndexes = (children, currentIndex) => {\n    const visibleIndexes = [];\n    let start;\n    let limit;\n    const { settings } = this.state;\n    const showSidesSlide = settings.showSides ? 1 : 0;\n\n    start = children.length + settings.slidesToShow + showSidesSlide;\n    if (currentIndex === 0) {\n      limit = start + settings.slidesToShow - 1;\n      for (let index = start; index <= limit; index += 1) {\n        visibleIndexes.push(index);\n      }\n    }\n\n    start = 0 + showSidesSlide;\n    const isAtLastPage =\n      currentIndex === children.length - settings.slidesToShow;\n\n    if (isAtLastPage) {\n      limit = start + settings.slidesToShow - 1;\n      for (let index = start; index <= limit; index += 1) {\n        visibleIndexes.push(index);\n      }\n    }\n\n    start = currentIndex + settings.slidesToShow + showSidesSlide;\n    limit = start + (settings.slidesToShow - 1);\n    for (let index = start; index <= limit; index += 1) {\n      visibleIndexes.push(index);\n    }\n\n    return visibleIndexes;\n  };\n\n  getLazyLoadedIndexes = (children, currentIndex) => {\n    const { lazyLoadedList } = this.state;\n    let start;\n    let limit;\n    const { settings } = this.state;\n    const showSidesSlide = settings.showSides ? 1 : 0;\n    const newLazyLoadedList = [].concat(lazyLoadedList);\n\n    start = children.length + settings.slidesToShow + showSidesSlide;\n    if (currentIndex === 0 && lazyLoadedList.indexOf(start) < 0) {\n      limit = start + settings.slidesToShow + showSidesSlide - 1;\n      for (let index = start; index <= limit; index += 1) {\n        newLazyLoadedList.push(index);\n      }\n    }\n\n    start = 0;\n    const isAtLastPage =\n      currentIndex === children.length - settings.slidesToShow;\n    const notLazyLoaded = newLazyLoadedList.indexOf(start) < 0;\n\n    if (isAtLastPage && notLazyLoaded) {\n      limit = start + settings.slidesToShow + showSidesSlide - 1;\n      for (let index = start; index <= limit; index += 1) {\n        newLazyLoadedList.push(index);\n      }\n    }\n\n    start = currentIndex + settings.slidesToShow + showSidesSlide;\n    limit = start + (settings.slidesToShow - 1);\n\n    if (settings.showSides) {\n      start -= 1;\n      limit += 1;\n    }\n\n    for (let index = start; index <= limit; index += 1) {\n      if (lazyLoadedList.indexOf(index) < 0) {\n        newLazyLoadedList.push(index);\n      }\n    }\n\n    return newLazyLoadedList;\n  };\n\n  getChildrenList = (children, slidesToShow) => {\n    const { scrollOnDevice, showSides } = this.props;\n    if (!Array.isArray(children)) {\n      return [children];\n    }\n\n    if (scrollOnDevice && isTouchDevice()) {\n      return children;\n    }\n\n    if (children.length > slidesToShow && showSides) {\n      return [\n        ...children.slice(children.length - slidesToShow - 1, children.length),\n        ...children,\n        ...children.slice(0, slidesToShow + 1),\n      ];\n    }\n\n    if (children.length > slidesToShow) {\n      return [\n        ...children.slice(children.length - slidesToShow, children.length),\n        ...children,\n        ...children.slice(0, slidesToShow),\n      ];\n    }\n\n    return children;\n  };\n\n  getTargetIndex = (index, slidesToScroll) => {\n    const { childrenCount, currentIndex } = this.state;\n    let targetIndex = index;\n    const childrenReminder = childrenCount % slidesToScroll;\n    if (index < 0) {\n      if (currentIndex === 0) {\n        targetIndex = childrenCount - slidesToScroll;\n      } else {\n        targetIndex = 0;\n      }\n    } else if (index >= childrenCount) {\n      if (childrenReminder !== 0) {\n        targetIndex = 0;\n      } else {\n        targetIndex = index - childrenCount;\n      }\n    } else if (\n      childrenReminder !== 0 &&\n      index === childrenCount - childrenReminder\n    ) {\n      targetIndex = index - (slidesToScroll - childrenReminder);\n    } else {\n      targetIndex = index;\n    }\n\n    return targetIndex;\n  };\n\n  onDotClick = (event) => {\n    event.preventDefault();\n    const { settings, animating, autoCycleTimer } = this.state;\n    const { slidesToShow, autoCycle } = settings;\n    if (animating) {\n      return;\n    }\n    if (autoCycle && autoCycleTimer) {\n      clearInterval(autoCycleTimer);\n      this.setState({\n        autoCycleTimer: null,\n      });\n    }\n\n    const targetIndex = event.target.parentElement.getAttribute('data-index');\n    const currentIndex = this.getTargetIndex(\n      targetIndex * slidesToShow,\n      slidesToShow\n    );\n    this.handleTrack(targetIndex * slidesToShow, currentIndex);\n    if (settings.autoCycle) {\n      this.playAutoCycle();\n    }\n  };\n\n  onWindowResized = () => {\n    this.setDimensions();\n  };\n\n  onMouseEnter = () => {\n    const {\n      settings: { autoCycle, pauseOnHover },\n    } = this.state;\n    if (autoCycle && pauseOnHover) {\n      this.pauseAutoCycle();\n    }\n  };\n\n  onMouseOver = () => {\n    const {\n      settings: { autoCycle, pauseOnHover },\n    } = this.state;\n    if (autoCycle && pauseOnHover) {\n      this.pauseAutoCycle();\n    }\n  };\n\n  onMouseLeave = () => {\n    const {\n      settings: { autoCycle, pauseOnHover },\n    } = this.state;\n    if (autoCycle && pauseOnHover) {\n      this.playAutoCycle();\n    }\n  };\n\n  onSwipeStart = (e) => {\n    const {\n      settings: { swipe, draggable },\n    } = this.state;\n\n    if (swipe === false || ('ontouchend' in document && swipe === false)) {\n      return null;\n    }\n\n    if (draggable === false && e.type.indexOf('mouse') !== -1) {\n      return null;\n    }\n\n    const startX = e.touches !== undefined ? e.touches[0].pageX : e.clientX;\n    const startY = e.touches !== undefined ? e.touches[0].pageY : e.clientY;\n\n    this.setState({\n      dragging: true,\n      touchObject: {\n        startX,\n        startY,\n      },\n    });\n\n    return true;\n  };\n\n  onSwipeMove = (e) => {\n    const { dragging, animating } = this.state;\n    if (!dragging) {\n      e.preventDefault();\n      return;\n    }\n    if (animating) {\n      return;\n    }\n    const curX = e.touches !== undefined ? e.touches[0].pageX : e.clientX;\n    const curY = e.touches !== undefined ? e.touches[0].pageY : e.clientY;\n    const { touchObject } = this.state;\n    const direction = getSwipeDirection(\n      touchObject.startX,\n      curX,\n      touchObject.startY,\n      curY\n    );\n\n    if (direction !== 0) {\n      e.preventDefault();\n    }\n\n    const swipeLength = Math.round(Math.sqrt((curX - touchObject.startX) ** 2));\n\n    this.setState({\n      touchObject: {\n        startX: touchObject.startX,\n        startY: touchObject.startY,\n        endX: curX,\n        endY: curY,\n        length: swipeLength,\n        direction,\n      },\n    });\n  };\n\n  onSwipeEnd = () => {\n    const {\n      touchObject,\n      slidesWidth,\n      autoCycleTimer,\n      settings,\n      currentIndex,\n    } = this.state;\n    const swipeLength = touchObject.length;\n    if (swipeLength !== 0 && swipeLength > slidesWidth / 2) {\n      if (settings.autoCycle && autoCycleTimer) {\n        clearInterval(autoCycleTimer);\n        this.setState({\n          autoCycleTimer: null,\n        });\n      }\n\n      let targetIndex;\n      let nextCurrentIndex;\n      if (touchObject.direction === 1) {\n        // Next\n        targetIndex = currentIndex + settings.slidesToScroll;\n        nextCurrentIndex = this.getTargetIndex(\n          targetIndex,\n          settings.slidesToScroll\n        );\n      } else {\n        // Previous\n        targetIndex = currentIndex - settings.slidesToScroll;\n        nextCurrentIndex = this.getTargetIndex(\n          targetIndex,\n          settings.slidesToScroll\n        );\n        if (targetIndex < 0 && currentIndex !== 0) {\n          targetIndex = 0;\n        }\n      }\n      this.handleTrack(targetIndex, nextCurrentIndex);\n\n      if (settings.autoCycle) {\n        this.playAutoCycle();\n      }\n    } else {\n      const callback = () => {\n        setTimeout(() => {\n          this.setState({\n            animating: false,\n            dragging: false,\n            touchObject: {\n              startX: 0,\n              startY: 0,\n              endX: 0,\n              endY: 0,\n              length: 0,\n              direction: -1,\n            },\n          });\n        }, settings.animationDuration);\n      };\n\n      this.setState(\n        {\n          animating: true,\n          touchObject: {\n            direction: touchObject.direction * -1,\n          },\n        },\n        callback\n      );\n    }\n  };\n\n  getTrackStyles = () => {\n    const { settings } = this.state;\n    const {\n      touchObject,\n      singlePage,\n      sideSize,\n      animating,\n      slidesWidth,\n      slidesCount,\n      currentIndex,\n    } = this.state;\n    let trackWidth = slidesWidth + settings.slidesSpacing * 2;\n    trackWidth *= slidesCount + settings.slidesToShow * 2;\n    const totalSlideWidth = slidesWidth + settings.slidesSpacing * 2;\n    const showSidesSlide = settings.showSides ? 1 : 0;\n    const initialTrackPostion =\n      totalSlideWidth * (settings.slidesToShow + showSidesSlide);\n    const transition = animating\n      ? `transform ${settings.animationDuration}ms ease`\n      : '';\n    const hasTouchOffset = settings.swipe && touchObject.length;\n    const touchOffset = hasTouchOffset\n      ? touchObject.length * touchObject.direction\n      : 0;\n    const slidePosition = totalSlideWidth * currentIndex;\n    let trackPosition = initialTrackPostion + slidePosition + touchOffset;\n    const sideWidth = totalSlideWidth * sideSize;\n\n    if (settings.showSides) {\n      trackPosition -= sideWidth;\n    }\n\n    const transform = !singlePage\n      ? `translate(${-trackPosition}px, 0px)`\n      : 'none';\n\n    return {\n      position: 'relative',\n      display: 'block',\n      width: !singlePage ? trackWidth : '100%',\n      height: 'auto',\n      padding: 0,\n      transition,\n      transform,\n      boxSizing: 'border-box',\n      MozBoxSizing: 'border-box',\n      marginLeft: singlePage && settings.showSides ? `${sideWidth}px` : '0px',\n    };\n  };\n\n  getScrollTrackStyles = {\n    clear: 'both',\n    position: 'relative',\n    display: 'block',\n    width: '100%',\n    height: 'auto',\n    padding: 0,\n    boxSizing: 'border-box',\n    MozBoxSizing: 'border-box',\n  };\n\n  getSlideStyles = (isVisible) => {\n    const { slidesWidth, settings } = this.state;\n    const { scrollOnDevice } = this.props;\n    const isScrollTouch = scrollOnDevice && isTouchDevice();\n    const float = isScrollTouch ? 'none' : 'left';\n    const display = 'inline-block';\n    const opacity = isVisible ? '1' : settings.sidesOpacity;\n\n    return {\n      position: 'relative',\n      float,\n      display,\n      width: !Number.isNaN(slidesWidth) ? slidesWidth : 1,\n      height: 'auto',\n      margin: `0 ${settings.slidesSpacing}px`,\n      opacity,\n    };\n  };\n\n  getFormatedChildren = (children, lazyLoadedList, visibleSlideList) =>\n    Children.map(children, (child, index) => {\n      const { settings, slideUniqueIds } = this.state;\n      const isVisible = visibleSlideList.indexOf(index) >= 0;\n\n      if (!settings.lazyLoad || lazyLoadedList.indexOf(index) >= 0) {\n        return (\n          <li\n            className=\"InfiniteCarouselSlide\"\n            key={slideUniqueIds[index]}\n            style={this.getSlideStyles(isVisible)}\n          >\n            {child}\n          </li>\n        );\n      }\n\n      return (\n        <li\n          className=\"InfiniteCarouselSlide\"\n          key={slideUniqueIds[index]}\n          style={this.getSlideStyles(isVisible)}\n        >\n          <noscript>{child}</noscript>\n          <img alt=\"placeholder\" src={settings.placeholderImageSrc} />\n        </li>\n      );\n    });\n\n  autoCycle = () => {\n    const { settings, currentIndex } = this.state;\n    const targetIndex = currentIndex + settings.slidesToScroll;\n    const nextCurrentIndex = this.getTargetIndex(\n      targetIndex,\n      settings.slidesToScroll\n    );\n    this.handleTrack(targetIndex, nextCurrentIndex);\n  };\n\n  playAutoCycle = () => {\n    const { settings } = this.state;\n    if (settings.autoCycle) {\n      const autoCycleTimer = setInterval(\n        this.autoCycle,\n        settings.cycleInterval\n      );\n      this.setState({\n        autoCycleTimer,\n      });\n    }\n  };\n\n  pauseAutoCycle = () => {\n    const { autoCycleTimer } = this.state;\n    if (autoCycleTimer) {\n      clearInterval(autoCycleTimer);\n      this.setState({\n        autoCycleTimer: null,\n      });\n    }\n  };\n\n  handleTrack = (targetIndex, currentIndex) => {\n    const { children, onSlideChange } = this.props;\n    const { settings } = this.state;\n    const activePage = Math.ceil(currentIndex / settings.slidesToShow);\n    const lazyLoadedList = this.getLazyLoadedIndexes(children, currentIndex);\n    const visibleSlideList = this.getVisibleIndexes(children, currentIndex);\n\n    const callback = () => {\n      setTimeout(() => {\n        this.setState({\n          currentIndex,\n          animating: false,\n          dragging: false,\n        });\n      }, settings.animationDuration);\n    };\n\n    const stopAnimation = () => {\n      setTimeout(() => {\n        this.setState({\n          animating: false,\n          dragging: false,\n        });\n      }, settings.animationDuration);\n    };\n\n    if (targetIndex < 0) {\n      this.setState(\n        {\n          currentIndex: targetIndex,\n          activePage,\n          animating: true,\n          lazyLoadedList,\n          visibleSlideList,\n          touchObject: {\n            startX: 0,\n            startY: 0,\n            endX: 0,\n            endY: 0,\n            length: 0,\n            direction: -1,\n          },\n        },\n        callback\n      );\n    } else if (targetIndex >= children.length) {\n      this.setState(\n        {\n          currentIndex: targetIndex,\n          activePage,\n          animating: true,\n          lazyLoadedList,\n          visibleSlideList,\n          touchObject: {\n            startX: 0,\n            startY: 0,\n            endX: 0,\n            endY: 0,\n            length: 0,\n            direction: -1,\n          },\n        },\n        callback\n      );\n    } else {\n      this.setState(\n        {\n          currentIndex,\n          activePage,\n          animating: true,\n          lazyLoadedList,\n          visibleSlideList,\n          dragging: false,\n          touchObject: {\n            startX: 0,\n            startY: 0,\n            endX: 0,\n            endY: 0,\n            length: 0,\n            direction: -1,\n          },\n        },\n        stopAnimation\n      );\n    }\n\n    if (onSlideChange) {\n      onSlideChange(activePage);\n    }\n  };\n\n  moveToNext = (event) => {\n    const { onNextClick } = this.props;\n    const { animating, settings, currentIndex, autoCycleTimer } = this.state;\n    event.preventDefault();\n    if (onNextClick) {\n      onNextClick(event);\n    }\n    if (animating) {\n      return;\n    }\n    if (settings.autoCycle && autoCycleTimer) {\n      clearInterval(autoCycleTimer);\n      this.setState({\n        autoCycleTimer: null,\n      });\n    }\n\n    const targetIndex = currentIndex + settings.slidesToScroll;\n    const nextCurrentIndex = this.getTargetIndex(\n      targetIndex,\n      settings.slidesToScroll\n    );\n    this.handleTrack(targetIndex, nextCurrentIndex);\n    if (settings.autoCycle) {\n      this.playAutoCycle();\n    }\n  };\n\n  moveToPrevious = (event) => {\n    const { onPreviousClick } = this.props;\n    const { animating, settings, currentIndex, autoCycleTimer } = this.state;\n    event.preventDefault();\n    if (onPreviousClick) {\n      onPreviousClick(event);\n    }\n    if (animating) {\n      return;\n    }\n    if (settings.autoCycle && autoCycleTimer) {\n      clearInterval(autoCycleTimer);\n      this.setState({\n        autoCycleTimer: null,\n      });\n    }\n\n    let targetIndex = currentIndex - settings.slidesToScroll;\n    const nextCurrentIndex = this.getTargetIndex(\n      targetIndex,\n      settings.slidesToScroll\n    );\n    if (targetIndex < 0 && currentIndex !== 0) {\n      targetIndex = 0;\n    }\n    this.handleTrack(targetIndex, nextCurrentIndex);\n    if (settings.autoCycle) {\n      this.playAutoCycle();\n    }\n  };\n\n  getSettingsForScrollOnDevice = () => {\n    const { scrollOnDevice } = this.props;\n    const { scrollOnDeviceProps } = this.state;\n    let settings;\n    if (scrollOnDevice && isTouchDevice()) {\n      settings = {\n        ...this.defaultProps,\n        ...this.props,\n        ...scrollOnDeviceProps,\n      };\n    } else {\n      settings = {\n        ...this.defaultProps,\n        ...this.props,\n      };\n    }\n    return settings;\n  };\n\n  init = () => {\n    const { responsive } = this.props;\n    if (responsive) {\n      this.setupBreakpointSettings();\n    } else {\n      const { children } = this.props;\n      const settings = this.getSettingsForScrollOnDevice();\n      const { slidesToShow } = settings;\n      const newChildren = this.getChildrenList(children, slidesToShow);\n      const slideUniqueIds = newChildren.map((child) => uniqid('slide-')); // eslint-disable-line  no-unused-vars\n      this.setState(\n        {\n          children: newChildren,\n          slideUniqueIds,\n          settings,\n        },\n        () => {\n          this.setDimensions();\n          this.playAutoCycle();\n        }\n      );\n    }\n  };\n\n  storeFrameRef = (f) => {\n    if (f !== null) {\n      this.frame = f;\n    }\n  };\n\n  render() {\n    const { scrollOnDevice, pagingSeparator, name } = this.props;\n    const hasScrollOnDevice = scrollOnDevice && isTouchDevice();\n    const {\n      settings,\n      singlePage,\n      activePage,\n      slidePages,\n      dragging,\n    } = this.state;\n    let prevArrow;\n    let nextArrow;\n    let dots;\n\n    if (settings.arrows && !singlePage && !hasScrollOnDevice) {\n      if (settings.prevArrow == null) {\n        prevArrow = (\n          <InfiniteCarouselArrow\n            carouselName={name}\n            next={false}\n            onClick={this.moveToPrevious}\n          />\n        );\n      } else {\n        const prevArrowProps = {\n          onClick: this.moveToPrevious,\n        };\n        prevArrow = React.cloneElement(settings.prevArrow, prevArrowProps);\n      }\n\n      if (settings.nextArrow == null) {\n        nextArrow = (\n          <InfiniteCarouselArrow\n            carouselName={name}\n            onClick={this.moveToNext}\n          />\n        );\n      } else {\n        const nextArrowProps = {\n          onClick: this.moveToNext,\n        };\n        nextArrow = React.cloneElement(settings.nextArrow, nextArrowProps);\n      }\n    }\n\n    if (settings.dots && !singlePage && !hasScrollOnDevice) {\n      dots = (\n        <InfiniteCarouselDots\n          carouselName={name}\n          activePage={activePage}\n          numberOfDots={slidePages}\n          onClick={this.onDotClick}\n        />\n      );\n    }\n\n    if (settings.paging && !singlePage && !hasScrollOnDevice) {\n      dots = (\n        <span data-testid={`${name}-paging`} className=\"InfiniteCarouselPaging\">\n          {`${activePage + 1} ${pagingSeparator} ${slidePages}`}\n        </span>\n      );\n    }\n\n    const { children, lazyLoadedList, visibleSlideList } = this.state;\n    const formattedChildren = this.getFormatedChildren(\n      children,\n      lazyLoadedList,\n      visibleSlideList\n    );\n    let trackStyles;\n    let trackClassName;\n\n    if (scrollOnDevice && isTouchDevice()) {\n      trackStyles = {\n        ...this.getScrollTrackStyles,\n      };\n      trackClassName = 'InfiniteCarouselScrollTrack';\n    } else {\n      trackStyles = {\n        ...this.getTrackStyles(),\n      };\n      trackClassName = '';\n    }\n\n    const disableSwipeEvents = scrollOnDevice && isTouchDevice();\n\n    return (\n      <div\n        id={name}\n        data-testid={name}\n        className=\"InfiniteCarousel\"\n        onFocus={this.onMouseOver}\n        onMouseEnter={this.onMouseEnter}\n        onMouseLeave={this.onMouseLeave}\n        onMouseOver={this.onMouseOver}\n      >\n        {prevArrow}\n        <div className=\"InfiniteCarouselFrame\" ref={this.storeFrameRef}>\n          <ul\n            className={trackClassName}\n            style={trackStyles}\n            onMouseDown={!disableSwipeEvents ? this.onSwipeStart : null}\n            onMouseLeave={\n              dragging || !disableSwipeEvents ? this.onSwipeEnd : null\n            }\n            onMouseMove={\n              dragging || !disableSwipeEvents ? this.onSwipeMove : null\n            }\n            onMouseUp={!disableSwipeEvents ? this.onSwipeEnd : null}\n            onTouchCancel={\n              dragging || !disableSwipeEvents ? this.onSwipeEnd : null\n            }\n            onTouchEnd={!disableSwipeEvents ? this.onSwipeEnd : null}\n            onTouchMove={\n              dragging || !disableSwipeEvents ? this.onSwipeMove : null\n            }\n            onTouchStart={!disableSwipeEvents ? this.onSwipeStart : null}\n          >\n            {formattedChildren}\n          </ul>\n        </div>\n        {nextArrow}\n        {dots}\n      </div>\n    );\n  }\n}\n\nInfiniteCarousel.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]),\n  name: PropTypes.string,\n  arrows: PropTypes.bool, // eslint-disable-line react/no-unused-prop-types\n  dots: PropTypes.bool, // eslint-disable-line react/no-unused-prop-types\n  paging: PropTypes.bool, // eslint-disable-line react/no-unused-prop-types\n  pagingSeparator: PropTypes.string,\n  lazyLoad: PropTypes.bool, // eslint-disable-line react/no-unused-prop-types\n  swipe: PropTypes.bool, // eslint-disable-line react/no-unused-prop-types\n  draggable: PropTypes.bool, // eslint-disable-line react/no-unused-prop-types\n  animationDuration: PropTypes.number, // eslint-disable-line react/no-unused-prop-types\n  slidesToShow: PropTypes.number, // eslint-disable-line react/no-unused-prop-types\n  slidesToScroll: PropTypes.number, // eslint-disable-line react/no-unused-prop-types\n  slidesSpacing: PropTypes.number, // eslint-disable-line react/no-unused-prop-types\n  autoCycle: PropTypes.bool, // eslint-disable-line react/no-unused-prop-types\n  cycleInterval: PropTypes.number, // eslint-disable-line react/no-unused-prop-types\n  pauseOnHover: PropTypes.bool, // eslint-disable-line react/no-unused-prop-types\n  responsive: PropTypes.bool,\n  breakpoints: PropTypes.arrayOf(PropTypes.object),\n  placeholderImageSrc: PropTypes.string, // eslint-disable-line react/no-unused-prop-types\n  nextArrow: PropTypes.element, // eslint-disable-line react/no-unused-prop-types\n  prevArrow: PropTypes.element, // eslint-disable-line react/no-unused-prop-types\n  scrollOnDevice: PropTypes.bool,\n  showSides: PropTypes.bool,\n  sidesOpacity: PropTypes.number, // eslint-disable-line react/no-unused-prop-types\n  sideSize: PropTypes.number, // eslint-disable-line react/no-unused-prop-types\n  incrementalSides: PropTypes.bool, // eslint-disable-line react/no-unused-prop-types,\n  onSlideChange: PropTypes.func,\n  onNextClick: PropTypes.func,\n  onPreviousClick: PropTypes.func,\n};\n\nInfiniteCarousel.defaultProps = {\n  children: [],\n  name: 'infinite-carousel',\n  arrows: true,\n  dots: false,\n  paging: false,\n  lazyLoad: false,\n  swipe: true,\n  draggable: false,\n  animationDuration: 500,\n  slidesToShow: 1,\n  slidesToScroll: 1,\n  slidesSpacing: 10,\n  autoCycle: false,\n  cycleInterval: 5000,\n  pauseOnHover: true,\n  responsive: true,\n  breakpoints: [],\n  placeholderImageSrc: '',\n  pagingSeparator: '/',\n  nextArrow: null,\n  prevArrow: null,\n  scrollOnDevice: false,\n  showSides: false,\n  sidesOpacity: 1,\n  sideSize: 0.5,\n  incrementalSides: false,\n  onSlideChange: undefined,\n  onNextClick: undefined,\n  onPreviousClick: undefined,\n};\n\nexport default InfiniteCarousel;\n","import React from 'react';\nimport InfiniteCarousel from './InfiniteCarousel/';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <InfiniteCarousel\n        swipe\n        dots\n        paging\n        showSides\n        responsive\n        breakpoints={[\n          {\n            breakpoint: 768,\n            settings: {\n              slidesToScroll: 2,\n              slidesToShow: 2,\n            },\n          },\n          {\n            breakpoint: 1200,\n            settings: {\n              slidesToScroll: 3,\n              slidesToShow: 3,\n            },\n          },\n        ]}\n        sideSize={0.1}\n        sidesOpacity={0.5}\n        slidesToScroll={4}\n        slidesToShow={4}\n        onNextClick={() => {}}\n        onPreviousClick={() => {}}\n      >\n        <div>\n          <img\n            alt=\"\"\n            src=\"https://place-hold.it/215x215/55b64e/fff&fontsize=20\"\n          />\n        </div>\n        <div>\n          <img\n            alt=\"\"\n            src=\"https://place-hold.it/215x215/904098/fff&fontsize=20\"\n          />\n        </div>\n        <div>\n          <img\n            alt=\"\"\n            src=\"https://place-hold.it/215x215/ef4d9c/fff&fontsize=20\"\n          />\n        </div>\n        <div>\n          <img\n            alt=\"\"\n            src=\"https://place-hold.it/215x215/00f3d1/fff&fontsize=20\"\n          />\n        </div>\n        <div>\n          <img\n            alt=\"\"\n            src=\"https://place-hold.it/215x215/00ffff/fff&fontsize=20\"\n          />\n        </div>\n        <div>\n          <img\n            alt=\"\"\n            src=\"https://place-hold.it/215x215/ee1f34/fff&fontsize=20\"\n          />\n        </div>\n        <div>\n          <img\n            alt=\"\"\n            src=\"https://place-hold.it/215x215/91b4c0/fff&fontsize=20\"\n          />\n        </div>\n        <div>\n          <img\n            alt=\"\"\n            src=\"https://place-hold.it/215x215/ff6347/fff&fontsize=20\"\n          />\n        </div>\n        <div>\n          <img\n            alt=\"\"\n            src=\"https://place-hold.it/215x215/ebbfbf/fff&fontsize=20\"\n          />\n        </div>\n        <div>\n          <img\n            alt=\"\"\n            src=\"https://place-hold.it/215x215/def1f9/fff&fontsize=20\"\n          />\n        </div>\n        <div>\n          <img\n            alt=\"\"\n            src=\"https://place-hold.it/215x215/cdf2c6/fff&fontsize=20\"\n          />\n        </div>\n        <div>\n          <img\n            alt=\"\"\n            src=\"https://place-hold.it/215x215/9fa616/fff&fontsize=20\"\n          />\n        </div>\n        <div>\n          <img\n            alt=\"\"\n            src=\"https://place-hold.it/215x215/2c4caa/fff&fontsize=20\"\n          />\n        </div>\n        <div>\n          <img\n            alt=\"\"\n            src=\"https://place-hold.it/215x215/44e3e1/fff&fontsize=20\"\n          />\n        </div>\n        <div>\n          <img\n            alt=\"\"\n            src=\"https://place-hold.it/215x215/ff6666/fff&fontsize=20\"\n          />\n        </div>\n        <div>\n          <img\n            alt=\"\"\n            src=\"https://place-hold.it/215x215/94e1e3/fff&fontsize=20\"\n          />\n        </div>\n        <div>\n          <img\n            alt=\"\"\n            src=\"https://place-hold.it/215x215/29083c/fff&fontsize=20\"\n          />\n        </div>\n        <div>\n          <img\n            alt=\"\"\n            src=\"https://place-hold.it/215x215/ffff99/fff&fontsize=20\"\n          />\n        </div>\n        <div>\n          <img\n            alt=\"\"\n            src=\"https://place-hold.it/215x215/616161/fff&fontsize=20\"\n          />\n        </div>\n        <div>\n          <img\n            alt=\"\"\n            src=\"https://place-hold.it/215x215/ed7ebe/fff&fontsize=20\"\n          />\n        </div>\n      </InfiniteCarousel>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}